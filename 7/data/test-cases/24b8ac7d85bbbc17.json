{"uid":"24b8ac7d85bbbc17","name":"Test Operator points calculation","fullName":"test_points#test_operator_points_calculation","historyId":"c6a99fe7da393b7dde22a3797c29d85f","time":{"start":1716996370286,"stop":1716996370822,"duration":536},"description":"Test that the operator points are calculated correctly based on the operator's stake and the time passed since the last points calculation\nThe operator receives 1 points per hour based on 3% of the total ETH that was delegated to it by stakers.","descriptionHtml":"<p>Test that the operator points are calculated correctly based on the operator's stake and the time passed since the last points calculation<br />\nThe operator receives 1 points per hour based on 3% of the total ETH that was delegated to it by stakers.</p>\n","status":"failed","statusMessage":"AssertionError: assert 804.8922819960271 == 804.3445749041639\n +  where 804.8922819960271 = float('804.8922819960271')","statusTrace":"@allure.title(\"Test Operator points calculation\")\n    @allure.description(\"Test that the operator points are calculated correctly based on the operator's stake and the time passed since the last points calculation\\nThe operator receives 1 points per hour based on 3% of the total ETH that was delegated to it by stakers.\")\n    def test_operator_points_calculation():\n        response = requests.get(API_ENDPOINT + OPERATOR_TEST_ADDRESS)\n        parsed_response =  response.json()\n        last_points_date = parsed_response[\"date\"]\n        hours_difference = get_hours_difference(OPERATOR_START_POINT[\"date\"], last_points_date)\n        expected_points = float(OPERATOR_START_POINT[\"points\"]) + hours_difference * float(OPERATOR_START_POINT[\"stake\"]) * 0.03\n>       assert float(parsed_response[\"points\"]) == expected_points\nE       AssertionError: assert 804.8922819960271 == 804.3445749041639\nE        +  where 804.8922819960271 = float('804.8922819960271')\n\ntest_points.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"test_points"},{"name":"host","value":"fv-az1245-956"},{"name":"thread","value":"2061-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_points"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"24b8ac7d85bbbc17.json","parameterValues":[]}